/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as dashboardLayoutImport } from './routes/(dashboard)/_layout'
import { Route as dashboardLayoutHome2IndexImport } from './routes/(dashboard)/_layout/home2/index'
import { Route as dashboardLayoutHomeIndexImport } from './routes/(dashboard)/_layout/home/index'

// Create Virtual Routes

const dashboardImport = createFileRoute('/(dashboard)')()

// Create/Update Routes

const dashboardRoute = dashboardImport.update({
  id: '/(dashboard)',
  getParentRoute: () => rootRoute,
} as any)

const dashboardLayoutRoute = dashboardLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => dashboardRoute,
} as any)

const dashboardLayoutHome2IndexRoute = dashboardLayoutHome2IndexImport.update({
  id: '/home2/',
  path: '/home2/',
  getParentRoute: () => dashboardLayoutRoute,
} as any)

const dashboardLayoutHomeIndexRoute = dashboardLayoutHomeIndexImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => dashboardLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(dashboard)': {
      id: '/(dashboard)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof dashboardImport
      parentRoute: typeof rootRoute
    }
    '/(dashboard)/_layout': {
      id: '/(dashboard)/_layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof dashboardLayoutImport
      parentRoute: typeof dashboardRoute
    }
    '/(dashboard)/_layout/home/': {
      id: '/(dashboard)/_layout/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof dashboardLayoutHomeIndexImport
      parentRoute: typeof dashboardLayoutImport
    }
    '/(dashboard)/_layout/home2/': {
      id: '/(dashboard)/_layout/home2/'
      path: '/home2'
      fullPath: '/home2'
      preLoaderRoute: typeof dashboardLayoutHome2IndexImport
      parentRoute: typeof dashboardLayoutImport
    }
  }
}

// Create and export the route tree

interface dashboardLayoutRouteChildren {
  dashboardLayoutHomeIndexRoute: typeof dashboardLayoutHomeIndexRoute
  dashboardLayoutHome2IndexRoute: typeof dashboardLayoutHome2IndexRoute
}

const dashboardLayoutRouteChildren: dashboardLayoutRouteChildren = {
  dashboardLayoutHomeIndexRoute: dashboardLayoutHomeIndexRoute,
  dashboardLayoutHome2IndexRoute: dashboardLayoutHome2IndexRoute,
}

const dashboardLayoutRouteWithChildren = dashboardLayoutRoute._addFileChildren(
  dashboardLayoutRouteChildren,
)

interface dashboardRouteChildren {
  dashboardLayoutRoute: typeof dashboardLayoutRouteWithChildren
}

const dashboardRouteChildren: dashboardRouteChildren = {
  dashboardLayoutRoute: dashboardLayoutRouteWithChildren,
}

const dashboardRouteWithChildren = dashboardRoute._addFileChildren(
  dashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof dashboardLayoutRouteWithChildren
  '/home': typeof dashboardLayoutHomeIndexRoute
  '/home2': typeof dashboardLayoutHome2IndexRoute
}

export interface FileRoutesByTo {
  '/': typeof dashboardLayoutRouteWithChildren
  '/home': typeof dashboardLayoutHomeIndexRoute
  '/home2': typeof dashboardLayoutHome2IndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(dashboard)': typeof dashboardRouteWithChildren
  '/(dashboard)/_layout': typeof dashboardLayoutRouteWithChildren
  '/(dashboard)/_layout/home/': typeof dashboardLayoutHomeIndexRoute
  '/(dashboard)/_layout/home2/': typeof dashboardLayoutHome2IndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/home' | '/home2'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/home' | '/home2'
  id:
    | '__root__'
    | '/(dashboard)'
    | '/(dashboard)/_layout'
    | '/(dashboard)/_layout/home/'
    | '/(dashboard)/_layout/home2/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  dashboardRoute: typeof dashboardRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  dashboardRoute: dashboardRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(dashboard)"
      ]
    },
    "/(dashboard)": {
      "filePath": "(dashboard)",
      "children": [
        "/(dashboard)/_layout"
      ]
    },
    "/(dashboard)/_layout": {
      "filePath": "(dashboard)/_layout.tsx",
      "parent": "/(dashboard)",
      "children": [
        "/(dashboard)/_layout/home/",
        "/(dashboard)/_layout/home2/"
      ]
    },
    "/(dashboard)/_layout/home/": {
      "filePath": "(dashboard)/_layout/home/index.tsx",
      "parent": "/(dashboard)/_layout"
    },
    "/(dashboard)/_layout/home2/": {
      "filePath": "(dashboard)/_layout/home2/index.tsx",
      "parent": "/(dashboard)/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
